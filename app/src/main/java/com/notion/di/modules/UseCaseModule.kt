package com.notion.di.modulesimport com.notion.core.data.UserLocalDataSourceimport com.notion.core.data.UserRepositoryimport com.notion.core.intractors.GetProductListimport com.notion.framework.db.datasource.UserDataSourceImplimport com.notion.framework.db.mapper.ProductMapperimport dagger.Moduleimport dagger.Providesimport dagger.hilt.InstallInimport dagger.hilt.components.SingletonComponentimport javax.inject.Singleton@Module@InstallIn(SingletonComponent::class)class UseCaseModule {    // data source impl    @Provides    @Singleton    fun provideUserDataSourceImpl(productMapper: ProductMapper) : UserDataSourceImpl{        return UserDataSourceImpl(productMapper)    }    // repository    @Provides    @Singleton    fun provideUserRepository(userLocalDataSource: UserDataSourceImpl) : UserRepository {        return UserRepository(userLocalDataSource)    }    // intractors    @Provides    @Singleton    fun provideGetProductList(userRepository: UserRepository) : GetProductList {        return GetProductList(userRepository)    }}