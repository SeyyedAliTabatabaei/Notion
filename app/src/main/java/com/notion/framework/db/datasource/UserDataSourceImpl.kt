package com.notion.framework.db.datasourceimport com.notion.core.data.UserLocalDataSourceimport com.notion.core.domain.Productimport com.notion.framework.db.entities.ProductEntityimport com.notion.framework.db.mapper.ProductMapperimport javax.inject.Injectclass UserDataSourceImpl @Inject constructor(    private val productMapper: ProductMapper) : UserLocalDataSource {    override fun getProductList(): List<Product> {        return productMapper.mapFromEntityList(            listOf(                ProductEntity(id = 1 , icon = 1 , name = "ماشین جنگنده" , buyPrice = 1200 , sellerPrice = 950) ,                ProductEntity(id = 2 , icon = 2 , name = "روبیک" , buyPrice = 500 , sellerPrice = 200) ,                ProductEntity(id = 3 , icon = 3 , name = "قطار" , buyPrice = 200 , sellerPrice = 250) ,                ProductEntity(id = 4 , icon = 4 , name = "توپ فوتبال" , buyPrice = 654 , sellerPrice = 645) ,                ProductEntity(id = 5 , icon = 5 , name = "دسته گیم" , buyPrice = 100 , sellerPrice = 100) ,                ProductEntity(id = 6 , icon = 6 , name = "توپ پلاستیکی" , buyPrice = 50 , sellerPrice = 95) ,                ProductEntity(id = 7 , icon = 7 , name = "قطار چوبی" , buyPrice = 45 , sellerPrice = 66) ,                ProductEntity(id = 8 , icon = 8 , name = "قطار پلاستیکی" , buyPrice = 90 , sellerPrice = 45) ,                ProductEntity(id = 9 , icon = 9 , name = "بازی فکری" , buyPrice = 324 , sellerPrice = 554) ,                ProductEntity(id = 10 , icon = 10 , name = "هلیکوپتر" , buyPrice = 234 , sellerPrice = 22) ,                ProductEntity(id = 11 , icon = 11 , name = "ماشین شارژی" , buyPrice = 958 , sellerPrice = 343) ,            )        )    }}