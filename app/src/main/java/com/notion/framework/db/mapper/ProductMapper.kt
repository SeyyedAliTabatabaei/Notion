package com.notion.framework.db.mapperimport com.notion.core.domain.Productimport com.notion.framework.EntityMapperimport com.notion.framework.db.entities.ProductEntityimport javax.inject.Injectclass ProductMapper @Inject constructor() : EntityMapper<ProductEntity , Product> {    override fun mapFromEntity(entity: ProductEntity): Product {        return Product(            id = entity.id ,            icon = entity.icon ,            name = entity.name ,            buyPrice = entity.buyPrice ,            sellerPrice = entity.sellerPrice        )    }    override fun mapToEntity(domainModel: Product): ProductEntity {        return ProductEntity(            id = domainModel.id ,            icon = domainModel.icon ,            name = domainModel.name ,            buyPrice = domainModel.buyPrice ,            sellerPrice = domainModel.sellerPrice        )    }    fun mapToEntityList(list : List<Product>) : List<ProductEntity> {        return list.map {            return@map ProductEntity(                id = it.id ,                icon = it.icon ,                name = it.name ,                buyPrice = it.buyPrice ,                sellerPrice = it.sellerPrice            )        }    }    fun mapFromEntityList(list : List<ProductEntity>) : List<Product> {        return list.map {            return@map Product(                id = it.id ,                icon = it.icon ,                name = it.name ,                buyPrice = it.buyPrice ,                sellerPrice = it.sellerPrice            )        }    }}